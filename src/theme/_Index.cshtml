@section Header {
    @Html.Partial("_IndexHeader")
}

@{
    var language = Context.GetPipelineLanguage(); 
    var localizedStrings = Context.GetLocalizedResources(language);
    var cultureInfo = new System.Globalization.CultureInfo(localizedStrings["Locale"]);
}

<div class="row">
    <div class="col-sm-8 right-border">
        @{
            bool first = true;
            foreach(IDocument post in Model.DocumentList(Keys.PageDocuments))
            {                
                if (!first)
                {
                    <hr /> 
                }
                first = false;
                string lead = post.String(BlogKeys.Lead);
                <div class="post-preview">
                    <a href="@Context.GetLink(post)">
                        <h2 class="post-title">@post.WithoutSettings.String(BlogKeys.Title)</h2>
                        @if(!string.IsNullOrWhiteSpace(lead))
                        {
                            <h3 class="post-subtitle">@lead</h3>
                        }
                    </a>
                    <p class="post-meta">@string.Format(cultureInfo, localizedStrings["PostedOn"], post.Get<DateTime>(BlogKeys.Published))</p>
                    @if(Context.Bool(BlogKeys.IndexFullPosts))
                    {
                        @Html.Raw(post.Content)
                    }
                    else
                    {
                        @Html.Raw(post.String(BlogKeys.Excerpt))
                    }             
                </div>       
            }
        }
        <ul class="pager">
            <li class="previous">                
                @if(Model.Bool(Keys.HasPreviousPage))
                {
                    <a href="@(Context.GetLink(Model.Document(Keys.PreviousPage)))">@Html.Raw(localizedStrings["NewerPosts"])</a>
                }                
            </li>
            <li class="next">
                @if(Model.Bool(Keys.HasNextPage))
                {
                    <a href="@(Context.GetLink(Model.Document(Keys.NextPage)))">@Html.Raw(localizedStrings["OlderPosts"])</a>
                }
            </li>
        </ul>
    </div>
    <div class="col-sm-4 sidebar">
        <hr class="visible-xs-block" />
        @if(Documents.FromPipeline("Tags_" + language).Any())
        {
            <h5>@Html.Raw(localizedStrings["Tags"])</h5>
            <div>
                @foreach (IDocument tagDocument in Documents.FromPipeline("Tags_" + language)
                    .GroupBy(x => x.String(BlogKeys.Tag)).Select(x => x.Where(p => p.Get<int>(Keys.CurrentPage) == 1).First())
                    .OrderByDescending(x => x.Get<int>(Keys.TotalItems)).Take(10))
                {
                    string tag = tagDocument.String(BlogKeys.Tag);
                    string postCount = tagDocument.String(Keys.TotalItems);
                    <a role="button" href="@Context.GetLink(tagDocument)" class="btn btn-default btn-sm"> @tag (@postCount)</a>
                }
            </div>
            <ul class="pager">
                <li class="next">
                    <a href="@Context.GetLink(language + "/" + localizedStrings[BlogKeys.TagsPath])">@Html.Raw(localizedStrings["ViewAllTags"])</a>
                </li>
            </ul>
        }

        @if(!Context.Bool(BlogKeys.IndexPaging))
        {
            <hr />
            <h5>@Html.Raw(localizedStrings["OlderPostsTitle"])</h5>
            <ul class="list-unstyled">
                @foreach(IDocument post in Documents.FromPipeline("BlogPosts_" + language).Skip(Model.DocumentList(Keys.PageDocuments).Count).Take(4))
                {        
                    // TODO: The skip above needs to line up with the number of posts on the index page
                    // Also turn this section off if the index is paged
                    <li><a href="@Context.GetLink(post)">@post.WithoutSettings.String(BlogKeys.Title)</a></li>
                }
            </ul>
            @if(Context.Bool(BlogKeys.GenerateArchive))
            {
                <ul class="pager">
                    <li class="next">
                        <a href="@Context.GetLink(language + "/" + localizedStrings[BlogKeys.PostsPath])">@Html.Raw(localizedStrings["PostsArchive"])</a>
                    </li>
                </ul>
            }
        }

        @Html.Partial("_Sidebar")
    </div> 
</div>
